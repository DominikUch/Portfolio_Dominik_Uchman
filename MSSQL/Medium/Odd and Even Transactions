--TASK 3220.

-- Write a solution to find the sum of amounts for odd and even transactions for each day. If there are no odd or even transactions for a specific date, display as 0.
-- Return the result table ordered by transaction_date in ascending order.
-- The result format is in the following example.

-- Example:
-- Input:
-- transactions table:
-- +----------------+--------+------------------+
-- | transaction_id | amount | transaction_date |
-- +----------------+--------+------------------+
-- | 1              | 150    | 2024-07-01       |
-- | 2              | 200    | 2024-07-01       |
-- | 3              | 75     | 2024-07-01       |
-- | 4              | 300    | 2024-07-02       |
-- | 5              | 50     | 2024-07-02       |
-- | 6              | 120    | 2024-07-03       |
-- +----------------+--------+------------------+
-- Output:
-- +------------------+---------+----------+
-- | transaction_date | odd_sum | even_sum |
-- +------------------+---------+----------+
-- | 2024-07-01       | 75      | 350      |
-- | 2024-07-02       | 0       | 350      |
-- | 2024-07-03       | 0       | 120      |
-- +------------------+---------+----------+


--SOLUTION:
SELECT
    transaction_date, 
    SUM(CASE WHEN amount % 2 != 0 THEN amount ELSE 0 END) as odd_sum,
    SUM(CASE WHEN amount % 2 = 0 THEN amount ELSE 0 END) as even_sum
FROM Transactions
GROUP BY transaction_date
